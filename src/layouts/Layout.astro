---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import '../styles/global.css';
import '@fontsource-variable/jost';
---

<!-- 
	NOTE: Layout.astro holds common, reusable components that define the base layout
			of pages in the website. 
-->

<!doctype html>
<html lang="en">
	<head>
		<!-- Note: I am using the Astro template for rapid prototyping -->
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/ico" href="/favicon.ico" />
		<meta name="generator" content={Astro.generator} />
		<title>mk39-png's Portfolio</title>
	</head>

	<!-- Change the formatting of body to be centered and whatnot. -->
	<body>
		<Header>
		</Header>

		<!-- slot specifies where code is injected -->
		<slot />

		<Footer>
		</Footer>
	</body>
</html>

<style>
	/* Below color palette generated from below link: */
	/* https://coolors.co/364652-071108-916953-b5bec6-c7dbe6 */
    :root {
        --charcoal: #364652ff;
        --night: #071108ff;
        --thistle: #bfb1c1ff;
		--raw-umber: #916953ff;
        --french-gray: #b5bec6ff;
        --columbia-blue: #c7dbe6ff;
    }

	html {
		font-family: 'Jost Variable', sans-serif;

		/* https://akanksha-sharma.medium.com/display-property-in-css-a-visual-guide-9e6333f75868 */
		/* Flex to allow for dynamic alignment and advanced formatting */
		display: flex;

		/* Justify Content controls the alignment of current element (aka child elements in current container) */
		justify-content: center;

		/* Justify Items controls the alignment of content within child elements */
		justify-items: center;

		/* Setting width and height to automatically scale with webpage adjustments */
		width: auto;
		height: auto;

		color: var(--night);
	}

	body {
		/* Max Width using rem to be relative to the viewport size */
		/* That way, the user can zoom in and out while the content size remains constant */
		max-width: 50rem;
        border-radius: 10px;
		background-color:whitesmoke;
		/* box-shadow: 1px 4px 10px var(--charcoal); */
	}
</style>